<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on sparkknow blog</title>
    <link>https://sparkknow.com/post/</link>
    <description>Recent content in Posts on sparkknow blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 04 Jan 2022 17:15:24 +0800</lastBuildDate><atom:link href="https://sparkknow.com/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Multipass</title>
      <link>https://sparkknow.com/post/multipass/</link>
      <pubDate>Tue, 04 Jan 2022 17:15:24 +0800</pubDate>
      
      <guid>https://sparkknow.com/post/multipass/</guid>
      <description>install multipass $ brew install --cask multipass multipass version # 查找镜像 $ multipass find Image Aliases Version Description 18.04 bionic 20211129 Ubuntu 18.04 LTS 20.04 focal,lts 20211129 Ubuntu 20.04 LTS 21.04 hirsute 20211130 Ubuntu 21.04 21.10 impish 20211103 Ubuntu 21.10 anbox-cloud-appliance latest Anbox Cloud Appliance minikube latest minikube is local Kubernetes # 安装 $ multipass launch ubuntu # 检查运行实例 $ multipass list # 连接运行实例 $ multipass shell dancing-chipmunk # 连接实例运行命令 $ multipass exec dancing-chipmunk -- lsb_release -a # 停止一个实例 $ multipass stop dancing-chipmunk # 删除一个实例 $ multipass delete dancing-chipmunk # 清理文件 $ multipass purge # 帮助文件 $ multipass --help install podman ### start run virtual machine $ multipass launch -c 2 -d 10G -m 2G -n podman * -n : 指定启动实例名字 * -c : 分配 CPU 数量 * -d : 设置磁盘容量 * -m : 设置内存容量 # multipass list # multipass shell podman ### start run podman ubuntu@podman:~$ .</description>
    </item>
    
    <item>
      <title>Openresty_install</title>
      <link>https://sparkknow.com/post/openresty_install/</link>
      <pubDate>Tue, 04 Jan 2022 17:09:47 +0800</pubDate>
      
      <guid>https://sparkknow.com/post/openresty_install/</guid>
      <description>install openresty install-openresty
install auto ssl apt install luarocks make luarocks install lua-resty-auto-ssl # create Self-signed certificate mkdir /usr/local/openresty/ssl/ openssl req -new -newkey rsa:2048 -days 3650 -nodes -x509 \  -subj &amp;#39;/CN=sni-support-required-for-valid-ssl&amp;#39; \  -keyout /usr/local/openresty/ssl/resty-auto-ssl-fallback.key \  -out /usr/local/openresty/ssl/resty-auto-ssl-fallback.crt # create ssl directory mkdir -p /usr/local/openresty/ssl/resty-auto-ssl chown nobody:nogroup /usr/local/openresty/ssl/resty-auto-ssl configure vim /usr/local/openresty/nginx/conf/nginx.conf
user nobody nogroup; worker_processes auto; worker_rlimit_nofile 102400; timer_resolution 1000ms; pid logs/nginx.pid; events { worker_connections 102400; multi_accept on; use epoll; } http { # Basic Settings sendfile on; tcp_nopush on; tcp_nodelay on; types_hash_max_size 2048; server_tokens off; keepalive_timeout 65; include mime.</description>
    </item>
    
  </channel>
</rss>
